/**
 * Hlavn√≠ vstupn√≠ bod pro CRM aplikaci v Replit prost≈ôed√≠
 * 
 * Tento soubor spou≈°t√≠ server pomoc√≠ child_process
 */

import { spawn } from 'child_process';
import express from 'express';
import path from 'path';
import fs from 'fs';
import { fileURLToPath } from 'url';

// Vytvo≈ô√≠me express server
const app = express();

// Z√≠sk√°me aktu√°ln√≠ adres√°≈ô
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Z√°kladn√≠ status str√°nka
app.get('/', (req, res) => {
  res.send(`
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>CRM System - Status str√°nka</title>
      <style>
        body {
          font-family: Arial, sans-serif;
          line-height: 1.6;
          color: #333;
          max-width: 800px;
          margin: 0 auto;
          padding: 20px;
        }
        h1 { color: #2563eb; }
        .box {
          background: #f9fafb;
          border: 1px solid #e5e7eb;
          border-radius: 8px;
          padding: 15px;
          margin-bottom: 20px;
        }
        .success { color: #047857; }
        .error { color: #dc2626; }
        .info { color: #4f46e5; }
        .btn {
          display: inline-block;
          background: #2563eb;
          color: white;
          padding: 8px 16px;
          border-radius: 4px;
          text-decoration: none;
          margin-top: 10px;
        }
        .btn:hover {
          background: #1d4ed8;
        }
      </style>
    </head>
    <body>
      <h1>CRM System - Diagnostick√° str√°nka</h1>
      
      <div class="box">
        <h2 class="info">Stav serveru</h2>
        <p>Tato diagnostick√° str√°nka bƒõ≈æ√≠ na portu 3000. Hlavn√≠ CRM server by mƒõl bƒõ≈æet na portu 5000.</p>
        <p>ƒåas: ${new Date().toLocaleString()}</p>
      </div>
      
      <div class="box">
        <h2>Kontrola syst√©mu</h2>
        <ul>
          <li>Node.js: <span class="success">‚úÖ OK</span></li>
          <li>Express: <span class="success">‚úÖ OK</span></li>
          <li>Diagnostick√Ω server: <span class="success">‚úÖ Bƒõ≈æ√≠ na portu 3000</span></li>
          <li>Hlavn√≠ server: <span class="info">‚è≥ Pokus o spu≈°tƒõn√≠ na portu 5000...</span></li>
        </ul>
      </div>
      
      <div class="box">
        <h2>Dal≈°√≠ kroky</h2>
        <p>Tato str√°nka se automaticky obnov√≠ za 10 sekund a zkontroluje stav hlavn√≠ho serveru.</p>
        <p>Pokud probl√©my p≈ôetrv√°vaj√≠, zkuste:</p>
        <ol>
          <li>Upravit soubor .replit pro spr√°vn√© mapov√°n√≠ port≈Ø</li>
          <li>Restartovat Replit prost≈ôed√≠</li>
          <li>Spustit server pomoc√≠ "./run.sh" v termin√°lu</li>
        </ol>
        <a href="/" class="btn">Obnovit str√°nku</a>
      </div>
      
      <script>
        // Automatick√© obnoven√≠ str√°nky
        setTimeout(() => {
          window.location.reload();
        }, 10000);
      </script>
    </body>
  </html>
  `);
});

// Nastaven√≠ promƒõnn√Ωch prost≈ôed√≠
process.env.NODE_ENV = 'development';
process.env.HOST = '0.0.0.0';
process.env.PORT = '5000';

console.log('üöÄ Spou≈°t√≠m diagnostick√Ω server na portu 3000...');

// Spust√≠me doƒçasn√Ω server
app.listen(3000, '0.0.0.0', () => {
  console.log('‚úÖ Diagnostick√Ω server bƒõ≈æ√≠ na http://0.0.0.0:3000');
  
  // Spust√≠me hlavn√≠ server jako oddƒõlen√Ω proces
  console.log('üîÑ Spou≈°t√≠m hlavn√≠ CRM server na portu 5000...');
  
  const tsx = spawn('npx', ['tsx', 'server/index.ts'], {
    env: { ...process.env, NODE_ENV: 'development', HOST: '0.0.0.0', PORT: '5000' },
    stdio: 'inherit' // P≈ô√≠mo propoj√≠me stdin/stdout/stderr
  });
  
  // Zachyt√≠me ud√°losti procesu
  tsx.on('error', (err) => {
    console.error('‚ùå Chyba p≈ôi spou≈°tƒõn√≠ TSX procesu:', err);
  });
  
  tsx.on('close', (code) => {
    console.log(`üìã TSX proces ukonƒçen s k√≥dem: ${code}`);
  });
});